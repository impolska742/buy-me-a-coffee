import type { NextPage } from "next";
import "@rainbow-me/rainbowkit/styles.css";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useState } from "react";
import { useAccount, useNetwork, useSwitchNetwork } from "wagmi";
import { goerli } from "wagmi/chains";
import Head from "next/head";
import Header from "../components/Header/Header";
import Form from "../components/Form/Form";
import Memos from "../components/Memos/Memos";
import Wallet from "../components/Wallet/Wallet";

const App: NextPage = () => {
  const { chain } = useNetwork();
  const { isConnected } = useAccount();
  const [refetch, setRefetch] = useState<boolean>(false);
  const { error, isLoading, pendingChainId, isSuccess, switchNetwork } =
    useSwitchNetwork();

  if (isConnected && chain && chain.id !== goerli.id) {
    return (
      <div
        style={{
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          flexDirection: "column",
          height: "100vh",
        }}
      >
        <ToastContainer
          position="top-left"
          autoClose={3000}
          limit={5}
          hideProgressBar
          newestOnTop
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="light"
        />

        <p>Please switch to goerli testnet</p>

        <button
          disabled={!switchNetwork || goerli.id === chain?.id}
          onClick={() => {
            switchNetwork?.(goerli.id);
            isSuccess && toast.success("Switched network successfully!");
            error && toast.error(error && error.message);
          }}
        >
          Switch Network
          {isLoading && pendingChainId === goerli.id && " (switching)"}
        </button>
      </div>
    );
  }
  return (
    <div
      style={{
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
        minHeight: "100vh",
      }}
    >
      <Head>
        <title>Buy Me A Coffee</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ToastContainer
        position="top-left"
        autoClose={3000}
        limit={5}
        hideProgressBar
        newestOnTop
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="light"
      />
      <Header />
      <Wallet />
      {isConnected && <Form setRefetch={setRefetch} refetch={refetch} />}
      {isConnected && <Memos refetch={refetch} />}
    </div>
  );
};

export default App;
